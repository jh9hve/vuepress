(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{359:function(s,t,a){"use strict";a.r(t);var e=a(42),r=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"raspberry-pi"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raspberry-pi"}},[s._v("#")]),s._v(" Raspberry Pi")]),s._v(" "),a("h2",{attrs:{id:"raspberry-pi-os"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raspberry-pi-os"}},[s._v("#")]),s._v(" Raspberry Pi OS")]),s._v(" "),a("p",[s._v("Raspberry Pi OS (previously called Raspbian) をインストール"),a("br"),s._v("\nRaspberry Pi OS (32-bit) Lite　にした。デスクトップはいらないので・・・")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("Version:August 2020\nRelease date:2020-08-20\nKernel version:5.4\nSize:435 MB\n")])])]),a("p",[s._v("まず")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("sudo raspi-config\n")])])]),a("p",[s._v("を立ち上げ、５番のInterfacing Options で SSH を有効に"),a("br"),s._v("\nホスト名も設定しても良いかも")]),s._v(" "),a("p",[s._v("dhcpcd.conf　で有線LANを固定IPの設定にしたいのだが、\neth0 がインターフェース名にならず env(mac address) がインターフェース名になってしまうので"),a("br"),s._v('\n/lib/udev/rules.d/73-usb-net-by-mac.rules\nの該当箇所を eth0 に書き換える。（NAME="eth0"）'),a("br"),s._v("\n再起動すると ssh で接続できるので以後はリモートで。")]),s._v(" "),a("h2",{attrs:{id:"nginx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nginx"}},[s._v("#")]),s._v(" nginx")]),s._v(" "),a("p",[s._v("sudo apt install nginx")]),s._v(" "),a("p",[s._v("sudo systemctl start nginx で起動確認")]),s._v(" "),a("h2",{attrs:{id:"rtmp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rtmp"}},[s._v("#")]),s._v(" rtmp")]),s._v(" "),a("p",[s._v("sudo apt install libnginx-mod-rtmp")]),s._v(" "),a("h3",{attrs:{id:"etc-nginx-nginx-conf"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#etc-nginx-nginx-conf"}},[s._v("#")]),s._v(" /etc/nginx/nginx.conf")]),s._v(" "),a("p",[s._v("最後に次を追加するとOBSから受け取れる。")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("rtmp {\n   server {\n      listen 1935;\n      chunk_size 4096;\n\n      application live {\n         live on;\n         record off;\n      }\n   }\n}\n")])])]),a("h3",{attrs:{id:"obs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#obs"}},[s._v("#")]),s._v(" OBS")]),s._v(" "),a("p",[s._v("配信のサーバーを　rtmp://192.168.11.81/live （192.168.11.81 のところは環境に合わせる）")]),s._v(" "),a("p",[s._v("ストリームキーを　live")]),s._v(" "),a("h3",{attrs:{id:"プレーヤー-flash"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#プレーヤー-flash"}},[s._v("#")]),s._v(" プレーヤー (FLASH)")]),s._v(" "),a("p",[s._v("以下のファイルを live.html として /var/www/html に配置")]),s._v(" "),a("p",[s._v("192.168.11.81 のところは環境に合わせる。")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('<!DOCTYPE html>\n<html>\n\n<head>\n  <title>Videojs 7 + RTMP  (flash)</title>\n  <meta charset="utf-8">\n  <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/video.js/7.6.5/video-js.min.css" />\n  <script src="//cdnjs.cloudflare.com/ajax/libs/video.js/7.6.5/video.min.js"><\/script>\n  <script src="//cdnjs.cloudflare.com/ajax/libs/videojs-flash/2.1.2/videojs-flash.min.js"><\/script>\n  <script src="//cdn.jsdelivr.net/npm/videojs-flashls-source-handler@1.1.2/dist/videojs-flashls-source-handler.min.js"><\/script>\n</head>\n\n<body>\n  <video class="video-js vjs-default-skin" id="video-container" controls muted autoplay >\n    <source src="rtmp://192.168.11.81/live/live" type="rtmp/mp4">\n  </video>\n</body>\n<script>\n  var options = {\n    flash: {\n      swf: \'//cdnjs.cloudflare.com/ajax/libs/videojs-swf/5.4.2/video-js.swf\'\n    },\n    fluid: true\n  };\n  var player = videojs(\'video-container\', options);\n<\/script>\n\n</html>\n')])])]),a("h3",{attrs:{id:"プレーヤー-vlcメディアプレーヤー"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#プレーヤー-vlcメディアプレーヤー"}},[s._v("#")]),s._v(" プレーヤー VLCメディアプレーヤー")]),s._v(" "),a("p",[s._v("メディア　ネットワークストリームを開く　で次を指定（192.168.11.81の所は環境に合わせる）")]),s._v(" "),a("p",[s._v("rtmp://192.168.11.81/live/live")]),s._v(" "),a("h3",{attrs:{id:"stat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stat"}},[s._v("#")]),s._v(" stat")]),s._v(" "),a("p",[s._v("apt でインストールした場合 stat がないので次のようにした。")]),s._v(" "),a("h4",{attrs:{id:"etc-nginx-sites-available-default"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#etc-nginx-sites-available-default"}},[s._v("#")]),s._v(" /etc/nginx/sites-available/default")]),s._v(" "),a("p",[s._v("次を server { } の中の適当なところに追加（正規のやりかたは違うかも・・・）")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("        location /stat {\n                rtmp_stat all;\n                rtmp_stat_stylesheet /stat.xsl;\n        }\n\n        location /stat.xsl {\n                root html;\n        }\n\n")])])]),a("h4",{attrs:{id:"stat-xsl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stat-xsl"}},[s._v("#")]),s._v(" stat.xsl")]),s._v(" "),a("p",[s._v("/usr/share/nginx/html/")]),s._v(" "),a("p",[s._v("にコピー。（stat.xsl はdockerにあったものをusbメモリにて）")])])}),[],!1,null,null,null);t.default=r.exports}}]);